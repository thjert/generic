# ==> Add information on WLS_USER and WLS_PW into commEnv.cmd
# ==> Ansible Role for start Admin Server for the first time in a configured
# ==> WebLogic 12c R2 Domain
#
- name: Add WLS_USER into commEnv.cmd
  win_lineinfile:
    dest: "{{ oracle_base }}/common/bin/commEnv.cmd"
    insertbefore: ":endpointbase"
    line: "set WLS_USER={{ weblogic_admin }}"
    newline: unix

- name: Add WLS_PW into commEnv.cmd
  win_lineinfile:
    dest: "{{ oracle_base }}/common/bin/commEnv.cmd"
    insertbefore: ":endpointbase"
    line: "set WLS_PASS={{ weblogic_admin_pass }}"
    newline: unix

- name: Distribute installSvc.cmd based on template where delay=12000 is added
  win_template: src=installSvc.cmd.j2 dest={{ oracle_base }}/server/bin/installSvc.cmd owner={{ oracle_user }} group={{ oracle_group }}
  tags:
    - start-admin-server

- name: Distribute removeAdminServerService.cmd based on template (New file to setup AdminServer as a service)
  win_template: src=removeAdminServerService.cmd.j2 dest={{ oracle_base }}/server/bin/removeAdminServerService.cmd owner={{ oracle_user }} group={{ oracle_group }}
  tags:
    - start-admin-server

- name: Execute removeAdminServerService.cmd that will create the service
  win_shell: "{{ oracle_base }}/server/bin/removeAdminServerService.cmd > {{ oracle_base }}/logs/removeAdminServerService_{{ domain_name }}.log"
  tags:
     - start-admin-server

- name: Distribute addAdminServerService.cmd based on template (New file to setup AdminServer as a service)
  win_template: src=addAdminServerService.cmd.j2 dest={{ oracle_base }}/server/bin/addAdminServerService.cmd owner={{ oracle_user }} group={{ oracle_group }}
  tags:
    - start-admin-server

- name: Execute addAdminServerService.cmd that will create the service
  win_shell: "{{ oracle_base }}/server/bin/addAdminServerService.cmd > {{ oracle_base }}/logs/addAdminServerService_{{ domain_name }}.log"
  tags:
     - start-admin-server

#####- name: Create the security folder on Admin Server
#####  win_file:
#####    path: "{{ oracle_base }}/config/Domains/{{ domain_name }}/servers/{{ admin_server_name }}/security"
#####    state: directory
#####  tags:
#####    - start-admin-server
#####
#####- name: Create boot.properties file
#####  win_template: src=boot.properties dest={{ oracle_base }}/config/Domains/{{ domain_name }}/servers/{{ admin_server_name }}/security/boot.properties owner={{ oracle_user }} group={{ oracle_group }}
#####  tags:
#####    - start-admin-server
#####
- name: Copy Admin Server start-up script
  win_template: src=start-admin-server.py dest={{ mw_installer_folder }} owner={{ oracle_user }} group={{ oracle_group }} mode=0755
  tags:
    - start-admin-server
#####
#####
#####- name: create directory for extensions
#####  win_file: path="{{ domain_extension_home }}" state=directory
#####
#####- name: copy extensions
#####  win_copy:
#####    src=roles/common/files/weblogic/lib/
#####    dest="{{ domain_extension_home }}"
#####    owner="{{ oracle_user }}"
#####    group="{{ oracle_group }}"
#####  register: deployment_lib_copied

- name: Create the logs folder
  win_file:
    path: "{{ oracle_base }}/logs"
    state: directory
  tags:
    - start-admin-server

#####- name: Execute start Admin Server script
#####  ###win_shell: "{{ oracle_base }}/common/bin/wlst.cmd {{ oracle_base }}/installer/start-admin-server.py > {{ oracle_base }}/logs/ADMIN_STARTUP_{{ domain_name }}_$(date +'%F') "
#####  win_shell: "{{ oracle_base }}/common/bin/wlst.cmd {{ oracle_base }}/installer/start-admin-server.py > {{ oracle_base }}/logs/ADMIN_STARTUP_{{ domain_name }}"
#####  ###win_shell: "{{ oracle_base }}/config/Domains/{{ domain_name }}/startWebLogic > {{ oracle_base }}/logs/ADMIN_STARTUP_{{ domain_name }}"
#####  tags:
#####     - start-admin-server
#####
#####- name: Wait for Admin Server to startup
#####  wait_for: port={{ admin_server_port }} delay=3 timeout=90
#####  tags:
#####    - start-admin-server
